"use strict";(self.webpackChunkmetroline_docs_2=self.webpackChunkmetroline_docs_2||[]).push([[4084],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(r),f=i,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||a;return r?n.createElement(m,o(o({ref:t},p),{},{components:r})):n.createElement(m,o({ref:t},p))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1547:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),i=(r(7294),r(3905));const a={title:"SSL",excerpt:""},o="SSL",s={unversionedId:"getting-started/ssl",id:"getting-started/ssl",title:"SSL",description:"Metroline server",source:"@site/docs/10-getting-started/20-ssl.md",sourceDirName:"10-getting-started",slug:"/getting-started/ssl",permalink:"/docs/getting-started/ssl",draft:!1,editUrl:"https://github.com/metroline/metroline-docs/tree/main/docs/10-getting-started/20-ssl.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{title:"SSL",excerpt:""},sidebar:"main",previous:{title:"Installation",permalink:"/docs/getting-started/installation"},next:{title:"Limitations",permalink:"/docs/getting-started/limitations"}},l={},c=[{value:"Metroline server",id:"metroline-server",level:2},{value:"Self signed certificates",id:"self-signed-certificates",level:2}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,i.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ssl"},"SSL"),(0,i.kt)("h2",{id:"metroline-server"},"Metroline server"),(0,i.kt)("p",null,"Set ",(0,i.kt)("inlineCode",{parentName:"p"},"METROLINE_SSL_KEY")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"METROLINE_SSL_CERT")," with paths to your SSL key and certificate (in PEM format) respectively."),(0,i.kt)("h2",{id:"self-signed-certificates"},"Self signed certificates"),(0,i.kt)("p",null,"Whether you're using a self-signed certificate for your Metroline runner and/or git server, the concept is the same: make sure ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_EXTRA_CA_CERTS")," is set with a path to your CA certificate (PEM format) and is available in the environment ",(0,i.kt)("strong",{parentName:"p"},"before")," running Node."),(0,i.kt)("p",null,"If you're running locally, because ",(0,i.kt)("inlineCode",{parentName:"p"},"dotenv")," is registered programmatically, setting ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_EXTRA_CA_CERTS")," in your ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," will not work as the HTTPS agent is initialized before Node has even evaluated the program."),(0,i.kt)("p",null,"As a last resort, you can (but we strongly advice against it) set ",(0,i.kt)("inlineCode",{parentName:"p"},"METROLINE_SSL_VERIFY=false")," for runners to skip SSL verification."))}u.isMDXComponent=!0}}]);